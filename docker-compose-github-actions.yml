version: "3"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.build
    container_name: elprom-front
    restart: "unless-stopped"
    #environment:
    #  REACT_APP_API_URL: ${REACT_APP_API_URL}
    volumes:
      - /frontend/node_modules
      - ./frontend/src:/user/src/app/src
    #stdin_open: true
    #tty: true
    #env_file:
    #  - .env
    networks:
      - el-prom-network
      
  postgres:
    image: postgres:15.3
    container_name: postgres
    restart: "no"
    environment:
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
    networks:
      - el-prom-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: "no"
    networks:
      - el-prom-network
    environment:
      PGADMIN_DEFAULT_EMAIL: ${{secrets.PGADMIN_DEFAULT_EMAIL}}
      PGADMIN_DEFAULT_PASSWORD: ${{secrets.PGADMIN_DEFAULT_PASSWORD}}
    #ports:
    #  - 8080:80
    depends_on:
      - postgres
    volumes:
      - ./pgadmin4/servers.json:/pgadmin4/servers.json
    
  redis:
    image: redis:7-alpine
    container_name: redis_elprom
    restart: "always"
    networks:
      - el-prom-network

  nestjs-api:
    build:
      context: ./backend
    container_name: nestjs-api
    restart: "always"
    environment:
      DB_HOST: ${{secrets.DB_HOST}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      REDIS_HOST: ${{secrets.REDIS_HOST}}
      REDIS_PORT: ${{secrets.REDIS_PORT}}
      TTL: ${{secrets.TTL}}
      DEFAULT_ADMIN_NAME: ${{secrets.DEFAULT_ADMIN_NAME}}
      DEFAULT_ADMIN_EMAIL: ${{secrets.DEFAULT_ADMIN_EMAIL}}
      DEFAULT_ADMIN_PASSWORD: ${{secrets.DEFAULT_ADMIN_PASSWORD}}
      JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
      JWT_EXPIRATION_TIME: ${{secrets.JWT_EXPIRATION_TIME}}
    depends_on:
      - postgres
    volumes:
      - /backend/node_modules
      - ./backend/src:/user/src/api/src
    networks:
      - el-prom-network

  nginx:
        build:
          context: ./nginx-le
          dockerfile: Dockerfile
        image: umputun/nginx-le:latest
        hostname: nginx
        restart: always
        container_name: nginx

        logging:
          driver: json-file
          options:
              max-size: "10m"
              max-file: "5"

        volumes:
            - ./nginx-le/etc/ssl:/etc/nginx/ssl
            - ./nginx-le/etc/nginx.conf:/etc/nginx/service.conf
        ports:
            - 80:80
            - 443:443

        environment:
            - TZ=UTC
            - LETSENCRYPT=true
            - LE_EMAIL=mail@el-prom.com.ua
            - LE_FQDN=www.el-prom.com.ua,el-prom.com.ua
        depends_on:
          - frontend
          - nestjs-api
          - pgadmin
        networks:
          - el-prom-network

networks:
  el-prom-network:
    driver: bridge

volumes:
  postgres_data:
